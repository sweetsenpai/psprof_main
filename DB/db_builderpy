import sqlalchemy as sql
from sqlalchemy.orm import sessionmaker, declarative_base
import os
from dotenv import load_dotenv
load_dotenv()
db_path = 'sqlite:///' + os.getenv("DB_PATH")
Base = declarative_base()
print(db_path)

class Categories(Base):
    __tablename__ = 'categories'
    category_id = sql.Column(name='category_id', type_=sql.Integer, primary_key=True)
    category_title = sql.Column(name='category_title', type_=sql.String)

    def __init__(self, category_id, category_title):
        self.category_id = category_id
        self.category_title = category_title

    def __repr__(self):
        return f'{self.category_id}, {self.category_title}'

class Subcategories(Base):
    __tablename__ = 'subcategories'
    subcategories_id = sql.Column(name='subcategories_id', type_=sql.Integer, primary_key=True)
    subcategories_categories = sql.Column(sql.Integer, sql.ForeignKey('categories.category_id', ondelete="CASCADE"))
    subcategories_titel =  sql.Column(name='subcategory_title', type_=sql.String)
    subcategories_url = sql.Column(name='category_title', type_=sql.String, nullable=True)
    
    def __init__(self, subcategories_id,subcategories_categories, subcategories_titel, subcategories_url):
        self.subcategories_id = subcategories_id
        self.subcategories_categories = subcategories_categories
        self.subcategories_titel = subcategories_titel
        self.subcategories_url = subcategories_url
        
    def __repr__(self):
        return f'{self.subcategories_id}, {self.subcategories_categories}, {self.subcategories_titel}, {self.subcategories_url}'

class Ð¡hannels(Base):
    __tablename__ = 'channels'
    channel_id = sql.Column(name='channel_id', type_=sql.Integer, primary_key=True)
    subcategories_channel = sql.Column(sql.Integer, sql.ForeignKey('subcategories.subcategories_id', ondelete="CASCADE"))
    channel_titel = sql.Column(name='channel_titel', type_=sql.String)
    channel_url = sql.Column(name='channel_url', type_=sql.String)
    
    def __init__(self, channel_id, subcategories_channel, channel_titel, channel_url):
        self.channel_id = channel_id
        self.subcategories_channel = subcategories_channel
        self.channel_titel = channel_titel
        self.channel_url = channel_url
    
    def __repr__(self):
        return f'{self.channel_id}, {self.subcategories_channel}, {self.channel_titel}, {self.channel_url}'


class Users(Base):
    """_summary_

    table for collecting user data
    """
    __tablename__ = 'users'
    _id = sql.Column(name='_id', type_=sql.Integer, primary_key=True)
    user_id = sql.Column(name='user_id', type_=sql.Integer, index=True)
    user_name = sql.Column(name='user_name', type_=sql.String)
    
    def __init__(self, _id, user_id, user_name):
        self._id = _id
        self.user_id = user_id
        self.user_name = user_name
        
    def __repr__(self):
        return f'{self._id}, {self.user_id}, {self.user_name}'
        
    


engine = sql.create_engine(db_path + 'admin.db', echo=True)
Base.metadata.create_all(bind=engine)
Session = sessionmaker(bind=engine)
session = Session()